<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:thr="http://purl.org/syndication/thread/1.0">
  <id>https://www.axhixh.com.np/</id>
  <title>axhixh</title>
  
  <updated>2023-01-24T00:00:00Z</updated>
  
  <author><name>Ashish Shrestha</name></author>
  <link href="https://www.axhixh.com.np/axhixh.atom"></link>



<entry>
  <id>pages/text-to-diagrams/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Text to Diagrams</title>
  <published>2023-01-24T00:00:00Z</published>
  <updated>2023-01-24T00:00:00Z</updated>
  
  <category term="diagram"></category>
  
  <category term="text"></category>
  
  <category term="tools"></category>
  
  <link href="https://www.axhixh.com.np/pages/text-to-diagrams/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>I prefer to use text to diagram tools because it is easier to
version control the diagrams and see the difference between them.</p>
<p>It is easier to describe in text than spend time drawing them and
then laying them out. Auto-layout is often a time saver for these.</p>
<p>List of tools for creating diagrams from text descriptions.</p>
<h2 id="plantumlhttpsplantumlcom"><a href="https://plantuml.com/">PlantUML</a></h2>
<p>Includes all the common UML diagrams. I like that I can make the
diagrams &ldquo;handwritten&rdquo;. It is useful to indicate they represent
draft diagrams.</p>
<h2 id="mermaidhttpmermaid-jsgithubiomermaid"><a href="http://mermaid-js.github.io/mermaid/">Mermaid</a></h2>
<p>Looks good. I haven&rsquo;t used it much. Easy to get started without
installing anything.</p>
<h2 id="diagramshttpsdiagramsmingrammercom"><a href="https://diagrams.mingrammer.com/">Diagrams</a></h2>
<p>Generate cloud architecture diagrams from description written as
Python code description. Supports major cloud providers and Kubernetes.</p>
<h2 id="d2httpsd2langcomtourintro"><a href="https://d2lang.com/tour/intro/">D2</a></h2>
<p>D2, Declarative Diagramming, is new language for text to diagram.
It has a multiple layout engines and extensions. The diagrams it
generates are very clean. The language is readable.</p>
<p>Alternatives to PlantUML that looks interesting are:</p>
<ol>
<li><a href="http://www.nomnoml.com/">Nomnoml</a></li>
<li><a href="https://zenuml.com">ZenUML</a></li>
</ol>
<p><a href="https://text-to-diagram.com">Text to Diagram</a> website has a nice list
of diagramming tools that you can compare.</p>


  ]]></content>
</entry>

<entry>
  <id>pages/dithering/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Dithering</title>
  <published>2020-07-02T00:00:00Z</published>
  <updated>2020-07-02T00:00:00Z</updated>
  
  <category term="image-processing"></category>
  
  <category term="algorithms"></category>
  
  <category term="go"></category>
  
  <category term="website"></category>
  
  <category term="solar"></category>
  
  <link href="https://www.axhixh.com.np/pages/dithering/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>While reading an article on making energy efficient website on <a href="https://solar.lowtechmagazine.com/2018/09/how-to-build-a-lowtech-website.html">Low ← Tech Magazine</a>, I noticed that they use dithering to reduce the size of the image. I reduce the number of colors in the palette when I digitize my notebooks. Reducing the number of colours for a photo makes it look bad due to banding; dithering helps. <a href="https://en.wikipedia.org/wiki/Dither">Wikipedia</a> defines dither as <em>an intentionally applied form of noise used to randomize quantization error, preventing large-scale patterns such as color banding in images.</em></p>
<p>The different dithering algorithms are all about the feedback process that diffuses the quantization error to neighbouring pixels. The different algorithms are documented at <a href="https://tannerhelland.com/2012/12/28/dithering-eleven-algorithms-source-code.html">https://tannerhelland.com/2012/12/28/dithering-eleven-algorithms-source-code.html</a></p>
<p>There are also algorithms that introduce noise in an ordered manner instead of diffusing the error to overcome the banding. These are called ordered dithering. These have more speckling, but the algorithm is fast. In fact, Low ← Tech Magazine chose to use ordered Bayes to dither its images.</p>
<p><a href="https://github.com/esimov/dithergo">DitherGo</a> and <a href="https://app.dithermark.com">DitherMark</a> have implementations of the different dithering algorithms.</p>
<p>To read more about designing websites for solar power or making them energy efficient checkout <a href="https://github.com/lowtechmag/solar/wiki/Solar-Web-Design">Solar Web Design</a></p>


  ]]></content>
</entry>

<entry>
  <id>pages/smart-crop/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Smart Crop</title>
  <published>2020-03-30T00:00:00Z</published>
  <updated>2020-03-30T00:00:00Z</updated>
  
  <category term="image-processing"></category>
  
  <category term="photo"></category>
  
  <category term="opencv"></category>
  
  <category term="face-detection"></category>
  
  <category term="tools"></category>
  
  <link href="https://www.axhixh.com.np/pages/smart-crop/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>Open source software for smart crop. Smart crop enables batch
cropping of images that are useful and not just from the middle
of the image.</p>
<h1 id="smartcropjshttpsgithubcomjwagnersmartcropjs"><a href="https://github.com/jwagner/smartcrop.js">SmartCrop.js</a></h1>
<p>A simple implementation of smart crop in Javascript. The algorigthm
used is simple and has inspired many implementations in differnt
languages.</p>
<p>From the SmartCrop.js README:</p>
<pre><code>Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace
2. Find regions with a color like skin
3. Find regions high in saturation
4. Boost regions as specified by options (for example detected faces)
5. Generate a set of candidate crops using a sliding window
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges.
7. Output the candidate crop with the highest rank
</code></pre>
<h1 id="katnahttpsgithubcomkeplerlabkatna"><a href="https://github.com/keplerlab/katna">Katna</a></h1>
<p>Supports both video and images. The image smart crop is based on smartcrop.js.
It is written in Python.</p>
<h1 id="thumborhttpthumbororg"><a href="http://thumbor.org/">Thumbor</a></h1>
<p>Another smart crop program written in Python. It uses OpenCV for face detection.
Other detectors it uses for identifying features for smart crop is documented at
<a href="https://thumbor.readthedocs.io/en/latest/detection_algorithms.html">https://thumbor.readthedocs.io/en/latest/detection_algorithms.html</a></p>


  ]]></content>
</entry>

<entry>
  <id>pages/digitizing-documents/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Digitizing Paper Documents</title>
  <published>2020-03-26T00:00:00Z</published>
  <updated>2020-03-26T00:00:00Z</updated>
  
  <category term="notebook"></category>
  
  <category term="office-lens"></category>
  
  <category term="scanning"></category>
  
  <category term="notes"></category>
  
  <category term="archive"></category>
  
  <category term="tools"></category>
  
  <link href="https://www.axhixh.com.np/pages/digitizing-documents/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>I love writing with fountain pen and maintain all my notes, to dos,
logs and other lists in paper notesbooks. When I am finish a note-
book, I like to scan it and convert it into a PDF for future. It
is also easier to archive it.</p>
<p>OCR isn&rsquo;t a requirement for me at the moment.</p>
<p>Listing programs I have found useful for scanning and making PDFs.</p>
<h2 id="paperlesshttpsgithubcomthe-paperless-projectpaperless"><a href="https://github.com/the-paperless-project/paperless">paperless</a></h2>
<p>Full document management system, that scans, indexes and archives
all paper documents. Supports OCR and searching of documents.</p>
<h2 id="unpaperhttpsgithubcomflameeyesunpaper"><a href="https://github.com/Flameeyes/unpaper">unpaper</a></h2>
<p>Unpaper is a post processing program to clean scanned images. It
is used to straighten, despeckle the scanned documents. This
program is used by paperless.</p>
<h2 id="noteshrinkhttpsmzuckergithubio20160920noteshrinkhtml"><a href="https://mzucker.github.io/2016/09/20/noteshrink.html">noteshrink</a></h2>
<p>Noteshrink is meant to process hand written notes. This is the
program I used to convert my scanned notebook to PDFs.</p>
<h2 id="office-lenshttpswwwmicrosoftcomen-usmicrosoft-365blog20150402office-lens-comes-to-iphone-and-android"><a href="https://www.microsoft.com/en-us/microsoft-365/blog/2015/04/02/office-lens-comes-to-iphone-and-android/">Office Lens</a></h2>
<p>Office Lens is a mobile phone app from Microsoft. This is a
great solution when I only have a few pages to scan. However,
it is too tedious to scan a whole notebook with it. I prefer
to use desktop scanner.</p>


  ]]></content>
</entry>

<entry>
  <id>pages/programming-fonts/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Programming Fonts</title>
  <published>2020-03-01T00:00:00Z</published>
  <updated>2020-03-01T00:00:00Z</updated>
  
  <category term="font"></category>
  
  <category term="ligature"></category>
  
  <category term="editor"></category>
  
  <category term="terminal"></category>
  
  <link href="https://www.axhixh.com.np/pages/programming-fonts/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<h1 id="list-of-fonts-for-programming">List of Fonts for Programming</h1>
<p>Monospaced fonts for text editors, IDE and terminals. Mostly free and some open source fonts. Only fonts I have tried.</p>
<h2 id="cascadia-code">Cascadia Code</h2>
<p>Font programming ligatures from Microsoft. <a href="https://github.com/microsoft/cascadia-code">https://github.com/microsoft/cascadia-code</a></p>
<h2 id="fira-code">Fira Code</h2>
<p>My first font with ligatures. <a href="https://github.com/tonsky/FiraCode">https://github.com/tonsky/FiraCode</a> My default font till recently.</p>
<h2 id="jetbrains-mono">JetBrains Mono</h2>
<p>Font from JetBrains <a href="https://www.jetbrains.com/lp/mono/">https://www.jetbrains.com/lp/mono/</a> Default font in JetBrains IDEs since 2020.1 versions. Find it too blocky compared to Fira Code.</p>
<h2 id="monoid">Monoid</h2>
<p>Very sharp even at small size <a href="https://larsenwork.com/monoid/">https://larsenwork.com/monoid/</a></p>
<h2 id="source-code-pro">Source Code Pro</h2>
<p>OpenType font from Adobe. Has extra light version. Doesn&rsquo;t have ligatures. <a href="https://adobe-fonts.github.io/source-code-pro/">https://adobe-fonts.github.io/source-code-pro/</a></p>
<h2 id="hasklig">Hasklig</h2>
<p>Fork of Source Code Pro with programming ligatures. Ligature substitution wasn&rsquo;t as good as Fira Code. Ligature substituion changed, and added lots of new ligatures. <a href="https://github.com/i-tu/Hasklig">https://github.com/i-tu/Hasklig</a></p>
<h2 id="victor-mono">Victor Mono</h2>
<p>Another clean, thin font. Has cursive italic style for informal looks. Currently my default because of how condensed and clean it is. <a href="https://rubjo.github.io/victor-mono/">https://rubjo.github.io/victor-mono/</a></p>


  ]]></content>
</entry>

<entry>
  <id>pages/ml-like-languages/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">ML like Languages</title>
  <published>2019-12-08T00:00:00Z</published>
  <updated>2019-12-08T00:00:00Z</updated>
  
  <category term="ml"></category>
  
  <category term="beam"></category>
  
  <category term="jvm"></category>
  
  <category term="dotnet"></category>
  
  <category term="fsharp"></category>
  
  <category term="gleam"></category>
  
  <category term="alpaca"></category>
  
  <category term="erlang"></category>
  
  <category term="ocaml"></category>
  
  <category term="lux"></category>
  
  <category term="eta"></category>
  
  <category term="scala"></category>
  
  <category term="lua"></category>
  
  <category term="python"></category>
  
  <link href="https://www.axhixh.com.np/pages/ml-like-languages/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>Functional languages with static typing.</p>
<h1 id="for-erlang-vm">For Erlang VM</h1>
<ul>
<li><a href="https://github.com/alpaca-lang/alpaca">Alpaca</a></li>
<li><a href="https://gleam.run/">Gleam</a></li>
<li><a href="https://wende.github.io/elchemy/">Elchemy</a></li>
</ul>
<h1 id="for-java-vm">For Java VM</h1>
<ul>
<li><a href="https://www.scala-lang.org/">Scala</a></li>
<li><a href="https://kotlinlang.org/">Kotlin</a></li>
<li><a href="https://eta-lang.org">Eta</a></li>
<li><a href="https://github.com/Frege/frege">Frege</a></li>
<li><a href="https://github.com/LuxLang/lux">Lux</a></li>
<li><a href="https://flix.dev/">Flix</a></li>
</ul>
<h1 id="for-net-runtime">For .net Runtime</h1>
<ul>
<li><a href="https://fsharp.org">F#</a></li>
</ul>
<h1 id="transpiles-to-javascript">Transpiles to Javascript</h1>
<ul>
<li><a href="https://bucklescript.github.io/">BuckleScript</a></li>
<li><a href="https://fable.io/">Fable</a></li>
<li><a href="http://www.purescript.org/">PureScript</a></li>
</ul>
<h1 id="rest">Rest</h1>
<ul>
<li><a href="https://amulet.works/">Amulet</a> transpiles to Lua</li>
<li><a href="http://coconut-lang.org/">Coconut</a> transpiles to Python</li>
</ul>


  ]]></content>
</entry>

<entry>
  <id>pages/sql-join/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">SQL Join</title>
  <published>2019-06-14T00:00:00Z</published>
  <updated>2019-06-14T00:00:00Z</updated>
  
  <category term="sql"></category>
  
  <link href="https://www.axhixh.com.np/pages/sql-join/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>A memorable explanation of SQL joins that I read somewhere on Internet. Hacker News or Reddit comments?</p>
<p>I was taught the Puritan church model for joins. It’s a little corny and maybe hasn’t aged particularly well, but gets the job done. It goes something like this:
Imagine a Puritan church where the men sit on one side, the women on the other.</p>
<p>An <code>INNER JOIN</code> is when the married couples hold hands and leave at the end, leaving all the singles behind.</p>
<p>A <code>LEFT JOIN</code> is when the women all leave - the married ones take their husbands and the single women go alone.</p>
<p>A <code>RIGHT JOIN</code> is the same thing, except the men all leave and take the wives and leave the single women behind. It’s rude to do this, in a Puritan church and in your SQL.</p>
<p>A <code>FULL OUTER JOIN</code> is a fire drill and everyone leaves, married couples together.</p>
<p>And a <code>CROSS JOIN</code> is a swingers party and should never happen in a Puritan church nor your SQL.</p>


  ]]></content>
</entry>

<entry>
  <id>pages/git-clients/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Git Clients</title>
  <published>2019-06-14T00:00:00Z</published>
  <updated>2019-06-14T00:00:00Z</updated>
  
  <category term="git"></category>
  
  <category term="source-control"></category>
  
  <category term="applications"></category>
  
  <category term="tools"></category>
  
  <category term="github"></category>
  
  <link href="https://www.axhixh.com.np/pages/git-clients/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>Clients I have used for interacting with <code>git</code> when I need something more than the command line interface or the built-in UI <code>git gui</code>.</p>
<h1 id="sourcetreehttpswwwsourcetreeappcom"><a href="https://www.sourcetreeapp.com/">SourceTree</a></h1>
<p>First git GUI I used. I still use it because I am familiar with it. You need to get an Atlassian account to use it.</p>
<h1 id="forkhttpsgit-forkcom"><a href="https://git-fork.com/">Fork</a></h1>
<p>Nice git GUI. Find it faster than SourceTree. Don&rsquo;t need to create any sort of accounts. Having built-in image diff is nice.</p>
<h1 id="tighttpsjonasgithubiotig"><a href="https://jonas.github.io/tig/">Tig</a></h1>
<p>Even though it is a text-mode interface, it is nice to be able to scroll around to explore a git repository. I have a shell alias <code>alias incoming='tig ..origin/master'</code> to explore incoming git changes.</p>


  ]]></content>
</entry>

<entry>
  <id>pages/20-cds-original-ipod/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">20 CDs Included with Original iPod</title>
  <published>2019-06-14T00:00:00Z</published>
  <updated>2019-06-14T00:00:00Z</updated>
  
  <category term="music"></category>
  
  <category term="apple"></category>
  
  <category term="ipod"></category>
  
  <category term="spotify"></category>
  
  <link href="https://www.axhixh.com.np/pages/20-cds-original-ipod/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>A great way to sample different music genre. The list of 20 CDs included with original iPod. Listen with <a href="https://open.spotify.com/playlist/7D4SVuRHKnJ96Z7NtLWV6L?si=f2xsEcBkRs6heVqI-v5-AA">Spotify playlist</a></p>
<p><a href="http://nobi.com/entry-1239.html">Article</a> about the 20 CDs and introduction of original iPod.</p>
<h1 id="cd-list">CD List</h1>
<ol>
<li>Classic Yo-Yo by Yo-Yo Ma</li>
<li>Mozart:Symphonies Nos. 35-41 by Karl Böhm</li>
<li>Goldberg Variations by Glenn Gould</li>
<li>Bridge Over Troubled Water by Simon &amp; Garfunkel</li>
<li>Bookends by Simon &amp; Garfunkel</li>
<li>The Bootleg Series, Vol. 4: Live 1966 - The &ldquo;Royal Albert Hall&rdquo; Concert by Bob Dylan</li>
<li>A Hard Day&rsquo;s Night by The Beatles</li>
<li>Abbey Road by The Beatles</li>
<li>Live In Cook County Jail by B.B. King</li>
<li>The Cole Porter Songbook, Vol 1 by Ella Fitzgerald</li>
<li>Kind of Blue by Miles Davis</li>
<li>Time Out by The Dave Brubeck Quartet</li>
<li>Jagged Little Pill by Alanis Morissette</li>
<li>Surfacing by Sarah McLachlan</li>
<li>Never mind by Nirvana</li>
<li>Legend by Bob Marley &amp; The Wailers</li>
<li>Breathe by Faith Hill</li>
<li>Crash by Dave Matthews Bandh</li>
<li>Play &amp; Play: B Sides by Moby</li>
<li>O Brother, Where Art Thou? (Music from the motion picture)</li>
</ol>


  ]]></content>
</entry>

<entry>
  <id>pages/origin/</id>
  <author><name>Ashish Shrestha</name></author>
  <title type="html">Origin</title>
  <published>2014-02-17T00:00:00Z</published>
  <updated>2014-02-17T00:00:00Z</updated>
  
  <category term="clojure"></category>
  
  <category term="github"></category>
  
  <category term="sheevaplug"></category>
  
  <link href="https://www.axhixh.com.np/pages/origin/" rel="alternate"></link>
  <content type="html"><![CDATA[
    
    
<p>Over the years, I have hand code and used a basic script to generate
my personal website. The last few years, I have used a <a href="http://github.com/axhixh/album">Clojure script</a>
I wrote to create the photo albums. This worked well for me.</p>
<p>This year, I have decided to do more with my corner of the web. I want to
use as a notebook and store links, lists and other random stuff.</p>
<p>Initially, I hosted the site on a <a href="http://en.wikipedia.org/wiki/SheevaPlug">SheevaPlug</a>, and now I host it with
<a href="http://pages.github.com/">Github Pages</a>. This means it is a static website.</p>


  ]]></content>
</entry>


</feed>
